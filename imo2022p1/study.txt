Problem:
The Bank of Oslo issues two types of coin: aluminium (denoted $A$ ) and bronze (denoted $B$ ). Marianne has $n$ aluminium coins and $n$ bronze coins, arranged in a row in some arbitrary initial order. A chain is any subsequence of consecutive coins of the same type. Given a fixed positive integer $k \leqslant 2 n$, Marianne repeatedly performs the following operation: she identifies the longest chain containing the $k^{\text {th }}$ coin from the left, and moves all coins in that chain to the left end of the row. For example, if $n=4$ and $k=4$, the process starting from the ordering $A A B B B A B A$ would be

$$
A A B \underline{B} B A B A \rightarrow B B B \underline{A} A A B A \rightarrow A A A \underline{B} B B B A \rightarrow B B B \underline{B} A A A A \rightarrow B B B \underline{B} A A A A \rightarrow \cdots .
$$

Find all pairs $(n, k)$ with $1 \leqslant k \leqslant 2 n$ such that for every initial ordering, at some moment during the process, the leftmost $n$ coins will all be of the same type.

Teacher:
Love this problem—let’s turn it into something you can *re-derive* confidently.

**Big idea (one line):** Track the number of “blocks” (maximal runs of equal coins); the operation never increases this number, and for the good range of (k) we can force it to eventually *decrease* until only two blocks remain (all (A)’s then all (B/C)’s, or vice versa).

**Plan for how we’ll learn it:**

1. Nail the key model: *blocks* and why “at most one (A)–(C) adjacency” (\iff) exactly **two** blocks of sizes (n) and (n).
2. Show **necessity** with counterexamples: if (k<n) or (k>\frac{3n+1}{2}), there’s a configuration that never reaches two blocks.
3. Show **sufficiency** for (n\le k\le \frac{3n+1}{2}): unless we’re already at two blocks, the process can’t keep moving only the rightmost block forever—otherwise (k) would be too large—so a block merge eventually happens, and repeating this gets us to two blocks.

Before we dive in: **What’s your goal for this session—(a) re-derive the proof yourself with hints, (b) get a clean conceptual walkthrough, or (c) both?**

Student:
Both

Teacher:
Perfect — we’ll do a guided re-derivation with quick “peeks” after each step.

**Checkpoint 1 (warm‑up):**
Why is the event “at some moment the leftmost (n) coins are all the same type” **equivalent** to “the configuration has exactly two blocks (all (A)’s then all (B)’s, or vice versa)”?

*Hint:* You have exactly (n) (A)’s and (n) (B)’s. If the first (n) are all (A), what must the last (n) be? And conversely, if there are exactly two blocks total, how many adjacencies are there?

Give me your one‑ or two‑sentence justification, and then I’ll show the polished version before we move on.

Student:
Because there are exactly (n) A’s and (n) B’s, if the first (n) coins are all A, the last (n) must all be B (and vice versa), so the configuration has exactly two blocks with a single A–B boundary at position (n). Conversely, if there are exactly two blocks, the single boundary splits the multiset of (n) A’s and (n) B’s into two contiguous runs, so each run must have length (n), making the leftmost (n) coins identical.

Teacher:
Great—your equivalence is spot on.

**Polished take:**
Because there are exactly (n) (A)’s and (n) (B)’s, “leftmost (n) coins are identical” (\iff) the row is split into two maximal blocks of sizes (n) and (n) (all (A)’s then all (B)’s, or vice versa). That’s the same as having exactly one (A)–(B) boundary.

---

### Checkpoint 2a — Necessity when (k<n)

Consider the configuration (A^{,n-1},B^{,n-1},A,B).
For (k<n): **Is the block containing the (k)-th coin already the leftmost block (why)?**

Student:
Yes. In (A^{n-1}B^{n-1}AB), the first (n-1) coins are (A)’s. Since (k<n) we have (k\le n-1), so the (k)-th coin lies inside that first (A)-block—i.e., the leftmost block.

Teacher:
Exactly. So when (k<n), the operation always picks the **leftmost** block; moving it to the left does nothing, so (A^{n-1}B^{n-1}AB) is a fixed point with 4 blocks ⇒ we can’t reach 2 blocks. Thus pairs with (k<n) are **not** allowed.

---

### Checkpoint 2b — Necessity when (k>\frac{3n+1}{2})

We’ll build a 4‑block configuration that never merges. Define
[
a:=k-n-1,\qquad b:=2n-k+1,
]
and consider (A^{a}B^{b}A^{b}B^{a}).

**Your turn (one quick check):** What is (2a+2b) in terms of (n)? (This confirms the total length is (2n).)

Student:
(2a+2b = 2(k-n-1) + 2(2n-k+1) = (2k - 2n - 2) + (4n - 2k + 2) = 2n.)
So the total length is (2n), as required.

Teacher:
Nice computation.

**Checkpoint 2b (finish the counterexample):**
In the four‑block layout (A^{a}B^{b}A^{b}B^{a}), the cumulative block endpoints are
[
a,\quad a+b,\quad a+2b,\quad 2n.
]
Given (k>2b+a), **which block contains the (k)-th coin** at the start?

*Hint:* Compare (k) to (a), (a+b), and (a+2b).

Student:
Since the cumulative endpoints are (a,\ a+b,\ a+2b,\ 2n) and (k>a+2b), the (k)-th position lies strictly past the third endpoint but not past (2n). So the (k)-th coin is in the **fourth (rightmost) block (B^{a})**.

Teacher:
Exactly—the (k)-th coin starts in the **rightmost** block.

**Checkpoint 2b (next tiny step):**
After we move that rightmost block to the front, the order is
[
B^{a}\ \big|\ A^{a}\ \big|\ B^{b}\ \big|\ A^{b},
]
whose cumulative endpoints are (a,\ 2a,\ 2a+b,\ 2n).

**Single task:** Compute (2a+b) in terms of (n) and (k). (Just substitute (a=k-n-1) and (b=2n-k+1).)

Student:
2a+b=2(k−n−1)+(2n−k+1)=(2k−2n−2)+(2n−k+1)=k−1.

Teacher:
Nice—since (2a+b=k-1), in the post‑move layout with endpoints (a,,2a,,2a+b,,2n), we have (k>2a+b).

**Single check:** In that layout, **which block** contains the (k)-th coin?

Student:
** The **fourth (rightmost) block (A^b)** again.

Teacher:
Yep — fourth block again.

**One more micro‑check to finish the cycle:**
From (B^{a},|,A^{a},|,B^{b},|,A^{b}), we move the rightmost block (A^{b}) to the front:
[
A^{b}\ \big|\ B^{a}\ \big|\ A^{a}\ \big|\ B^{b}.
]
Compute (2b+a) (in terms of (n,k)) and compare it to (k). This tells you whether the (k)-th coin is still in the rightmost block.

*Hint:* You already found (2a+b=k-1). Now do (2b+a). If (k>\tfrac{3n+1}{2}), what inequality do you get?

Student:
(2b+a=2(2n-k+1)+(k-n-1)=3n-k+1.)
Since (k>\frac{3n+1}{2}), we have (2k>3n+1\Rightarrow k>3n-k+1=2b+a).
Therefore the (k)-th coin lies past the third boundary, i.e., it’s **still in the fourth (rightmost) block** (here, (B^{,b}) in (A^{b}\mid B^{a}\mid A^{a}\mid B^{b})).

Teacher:
Excellent—so for (k>\frac{3n+1}{2}) we’ve built a 4‑block configuration where the (k)-th coin keeps landing in the **rightmost** block every step, so the process cycles and never merges. That completes **necessity**.

---

## Sufficiency: (n \le k \le \frac{3n+1}{2})

We’ll now show that in this range, starting from any arrangement, we must eventually reach 2 blocks.

**Checkpoint 3 — Monotonicity.**
After one move, can the **number of blocks** ever **increase**? Why or why not?

*Hint:* Moving one entire block to the front can only (i) keep two different-type blocks adjacent or (ii) make two same-type neighbors touch and merge. It can’t split a block into more pieces.

Student:
No—moving one **entire** block can’t increase the number of blocks. Removing the chosen block decreases the count by 1, and if its two former neighbors are the same type they merge, making it −2. When we place the block at the front, it either merges with the first block (adds 0) or sits next to a different type (adds +1). Hence the net change is in ({0,-1,-2}), never positive (edge cases at the ends fit the same conclusion).

Teacher:
Great. So block count never goes up.

**Checkpoint 3b — Who can be moved when (k\ge n)?**
Explain why, when (k\ge n), the **leftmost block** cannot be the chosen block — *unless* we already have exactly two blocks.

*Hint:* For the leftmost block to contain the (k)-th coin, its length must be (\ge k). What does that force about its size relative to (n) and about where all coins of that type must be?

Student:
For the leftmost block to be chosen, its length (L) must satisfy (L\ge k). But a block can’t exceed (n) because there are only (n) coins of a given type, so (L\le n). With (k\ge n) this forces (L=n): the leftmost block contains *all* coins of its type, so the remainder are the other type—i.e., exactly two blocks. Thus, unless we’re already at two blocks, the leftmost block cannot be the chosen block (and if (k>n), it’s outright impossible).

Teacher:
Exactly—so with (k\ge n), unless we’re already at two blocks, the leftmost block can’t be chosen.

---

### Checkpoint 4 — If the block count doesn’t drop

Suppose we’re in a configuration with (c\ge 3) blocks and after the next move the number of blocks **doesn’t** decrease. **Which block must have been moved, and why?**
(One sentence is enough.)

Student:
**The rightmost block**—any interior move would merge its two equal‑type neighbors and strictly drop the block count, and with (k\ge n) the leftmost block can’t be chosen unless we already have two blocks.

Teacher:
Exactly right.

---

### Checkpoint 4a — Parity of the block count

Suppose we’re in a state with (c\ge 3) blocks and the number of blocks **doesn’t** drop on the next move (so we must be moving the **rightmost** block).
**Question:** Why does this force (c) to be **even**?

*Hint:* If (c) were odd, the leftmost and rightmost blocks would be the **same** type. What happens when you move the rightmost block to the front?

Student:
Because with (c) blocks the types alternate, so if (c) were **odd** the leftmost and rightmost blocks would be the **same** type; moving the rightmost block to the front would then **merge** with the leftmost block, lowering the block count—contradicting the assumption that it doesn’t drop. Hence (c) must be **even**.

Teacher:
Great.

### Checkpoint 4b — Forcing a lower bound on (k)

Assume we’re in a (c\ge 4) (even) block configuration and, step after step, the **rightmost block is always the one moved** (so the block count never drops). Label the block sizes (a_1,\dots,a_c) in cyclic order; over (c) steps, each block appears as the rightmost once.

**Single task:**
When a block of size (a_i) is the **rightmost** block, what inequality must (k) satisfy so that the (k)-th coin lies inside that rightmost block?
(Answer it as a formula (k \ge \ldots) in terms of (n) and (a_i). *Hint:* the rightmost block occupies positions (2n-a_i+1,\dots,2n).* )

Student:
(k \ge 2n - a_i + 1), since the rightmost block of size (a_i) occupies positions ([,2n - a_i + 1,, 2n,]).
