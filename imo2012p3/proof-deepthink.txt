This is a solution to the IMO problem.

Part (a): If $n \ge 2^k$, then B can guarantee a win.

We will prove a stronger statement: B can guarantee a win if $n \ge k+1$. Since $2^k \ge k+1$ for all positive integers $k$, this implies the statement in (a).

B's strategy involves tracking the state of each candidate. Let $P$ be the set of possible candidates for $x$. Initially $P=\{1, \dots, N\}$. For each candidate $y \in P$, B tracks $s(y)$, the number of consecutive lies A has told immediately before the current stage, assuming $x=y$. Initially $s(y)=0$. The constraint on A implies that for the true value $x$, $s(x) \le k$. If $s(y)$ reaches $k+1$, $y$ is eliminated from $P$.

Let $C_i = \{y \in P \mid s(y)=i\}$. B's strategy consists of two phases:

1. Elimination phase: If $|C_k| \ge 2$. B picks two distinct candidates $y_1, y_2 \in C_k$ and asks the question $S=\{y_1\}$.
   - If A answers 'yes'. This is truthful for $y_1$, so $s(y_1)$ resets to 0. This is a lie for $y_2$. Since $s(y_2)=k$, it becomes $k+1$. $y_2$ is eliminated.
   - If A answers 'no'. This is a lie for $y_1$. $s(y_1)$ becomes $k+1$. $y_1$ is eliminated. This is truthful for $y_2$, so $s(y_2)$ resets to 0.
   In either case, $|P|$ decreases by 1.

2. Separation phase: If $|C_k| \le 1$ and there exists $i \in \{0, \dots, k-1\}$ such that $|C_i| \ge 2$. B chooses the largest such $i$, picks $y_1, y_2 \in C_i$, and asks $S=\{y_1\}$.
   - If A answers 'yes'. $s(y_1)=0$ and $s(y_2)=i+1$.
   - If A answers 'no'. $s(y_1)=i+1$ and $s(y_2)=0$.
   In both cases, $y_1$ and $y_2$ are now in different states. $|P|$ remains constant.

B repeatedly applies these rules until neither can be applied. We must show that this process terminates.

Let $M=|P|$. We define a potential function $\Phi(P) = \sum_{y \in P} 3^{s(y)}$.

In the Elimination phase, $M$ decreases.

In the Separation phase, $M$ is constant. We analyze the change in $\Phi$. Two candidates move from state $i$ to states 0 and $i+1$.
$$ \Delta \Phi = (3^0 + 3^{i+1}) - 2 \cdot 3^i = 1 + 3^i(3-2) = 1 + 3^i $$
Since $i \ge 0$, $\Delta \Phi \ge 2$. $\Phi$ strictly increases.
For a fixed $M$, $\Phi$ is bounded (at most $M \cdot 3^k$). Since $\Phi$ increases by at least 2 at each step, the Separation phase must terminate.

Since $M$ decreases in the Elimination phase and is bounded below by 1, the entire process must terminate.

When the process terminates, $|C_k| \le 1$ and $|C_i| \le 1$ for $i=0, \dots, k-1$. The total number of remaining candidates is $|P| = \sum_{i=0}^k |C_i| \le k+1$.
B specifies $X=P$. Since $x$ is never eliminated, $x \in X$. If $n \ge k+1$, B guarantees a win.

Part (b): For all sufficiently large $k$, there exists an integer $n \ge (1.99)^k$ such that B cannot guarantee a win.

We describe a strategy for A. Let $N=n+1$. A aims to maintain the compatibility of all $N$ candidates $\{1, \dots, N\}$.

We use a potential function argument. Let $\alpha \in (1, 2)$ be a parameter. Let $c(y)$ be the number of consecutive lies assuming $x=y$. Define the potential function $\Phi = \sum_{y=1}^N \alpha^{c(y)}$.
A's goal is to keep $\Phi < \alpha^{k+1}$, which guarantees $c(y) \le k$ for all $y$.

When B asks a question $S$. Let $W_S = \sum_{y \in S} \alpha^{c(y)}$ and $W_{\bar{S}} = \sum_{y \notin S} \alpha^{c(y)}$.
If A answers 'yes', the new potential is $\Phi'_Y = |S| + \alpha W_{\bar{S}}$.
If A answers 'no', the new potential is $\Phi'_N = |\bar{S}| + \alpha W_S$.

A chooses the answer that minimizes the resulting potential. A guarantees:
$$ \Phi' \le \frac{\Phi'_Y + \Phi'_N}{2} = \frac{N + \alpha \Phi}{2} $$

Define the critical potential $\Phi_{crit} = \frac{N}{2-\alpha}$. Since $\alpha \in (1, 2)$, $\Phi_{crit} > N$.
Initially $\Phi_0=N < \Phi_{crit}$.
By induction, $\Phi$ always remains below $\Phi_{crit}$, since if $\Phi < \Phi_{crit}$, then $\Phi' < \frac{N + \alpha \Phi_{crit}}{2} = \Phi_{crit}$.

A guarantees that no candidate is eliminated if $\Phi_{crit} < \alpha^{k+1}$.
$$ N < \alpha^{k+1} (2-\alpha) $$

We maximize the RHS $g(\alpha) = \alpha^{k+1}(2-\alpha)$ for $\alpha \in (1, 2)$.
The maximum is attained at $\alpha^* = \frac{2(k+1)}{k+2} = 2 - \frac{2}{k+2}$.
The maximum value is:
$$ N_{max}(k) = g(\alpha^*) = \frac{2^{k+2}}{k+2} \left(1-\frac{1}{k+2}\right)^{k+1} $$

We need to show that $N_{max}(k) > (1.99)^k$ for sufficiently large $k$.
Let $C=1.99$. We analyze the ratio $R(k) = N_{max}(k) / C^k$.
$$ R(k) = \frac{4}{k+2} \left(\frac{2}{C}\right)^k \left(1-\frac{1}{k+2}\right)^{k+1} $$
Let $A = \frac{2}{1.99} > 1$. As $k \to \infty$, $(1-\frac{1}{k+2})^{k+1} \to 1/e$.
$$ R(k) \sim \frac{4}{e(k+2)} A^k $$
Since $A>1$, $R(k) \to \infty$ as $k \to \infty$.
Therefore, for sufficiently large $k$, $N_{max}(k) > (1.99)^k$. Furthermore, we can find $K$ such that for $k \ge K$, $N_{max}(k) > (1.99)^k + 1$.

We choose $N = \lfloor N_{max}(k) \rfloor$. For sufficiently large $k$, $N \ge (1.99)^k + 1$.
Let $n=N-1$. Then $n \ge (1.99)^k$.
Since $N < N_{max}(k)$, A has a strategy to ensure that all $N$ candidates remain possible. B must specify a set $X$ of size at most $n$. Since there are $N=n+1$ possibilities, B cannot guarantee a win.