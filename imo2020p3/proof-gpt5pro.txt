**Goal.** We have pebbles with distinct weights (1,2,\dots,4n). Each pebble is colored in one of (n) colors, four pebbles per color. We must split them into two piles so that:

1. the total weights of the two piles are equal, and
2. each pile contains exactly two pebbles of each color.

---

### Step 1: Pair complementary weights

Pair the integers into the (2n) complementary pairs
[
(1,4n),\ (2,4n-1),\ \dots,\ (2n,2n+1),
]
so each pair sums to (4n+1).

If we ensure that **from each pair, exactly one pebble goes to each pile**, then the total sum in each pile will be exactly
[
n\cdot(4n+1)=\frac{1+2+\cdots+4n}{2},
]
so the weights are equal automatically. Thus the problem reduces to choosing, for each pair, which endpoint goes to the first pile (call it (A)); the other endpoint goes to the second pile (B).

The remaining constraint is: **each color must be chosen exactly twice for pile (A)** (and then, automatically, that color will appear twice in pile (B) as well).

---

### Step 2: An auxiliary multigraph on colors

Build a multigraph (G) whose vertices are the (n) colors and whose edges correspond to the (2n) complementary pairs:

* If the two pebbles in a pair have **distinct** colors (x) and (y), add an (ordinary) edge between vertices (x) and (y) in (G).
* If the two pebbles in a pair have the **same** color (x), add a **loop** at vertex (x).

Let (s(v)\in{0,1,2}) be the number of loops at color (v). Then of the four pebbles of color (v), (2s(v)) are already used up by loops, and the remaining (4-2s(v)) are in ordinary edges of (G). Hence the **non-loop degree** of (v) in (G) is
[
\deg'(v)=4-2s(v)\in{0,2,4},
]
which is even for every vertex.

Let (G') be the subgraph obtained from (G) by deleting all loops. Then **every vertex of (G') has even degree**. Therefore, each connected component of (G') decomposes into edge-disjoint cycles (standard Eulerian decomposition).

---

### Step 3: Orient cycles and decide pile (A)

We now decide which endpoint of each pair goes to pile (A) as follows:

* For every **loop** (a monochromatic pair), put **one** of the two (arbitrary choice) into (A), the other into (B). This contributes exactly **one** pebble of that color to (A) per loop.

* For the non-loop edges (i.e., edges of (G')), decompose (G') into cycles and **orient each cycle cyclically**. For a directed edge (x\to y), place into (A) the pebble from that pair whose color is the **head** (y); the other pebble goes to (B).

Since we pick exactly one endpoint from each pair, the piles (A) and (B) automatically have equal sums.

---

### Step 4: Check the color counts

Fix a color (v), with (s(v)) loops.

* From loops: (v) contributes exactly (s(v)) pebbles to (A) (one per loop).
* From non-loop edges: In each oriented cycle, the number of edges entering (v) equals the number leaving (v); hence, in the whole of (G'), the number of edges oriented **into** (v) equals (\deg'(v)/2). By our rule, each incoming edge contributes one pebble of color (v) to pile (A). Therefore, non-loops contribute (\deg'(v)/2=(4-2s(v))/2=2-s(v)) pebbles of color (v) to (A).

Total pebbles of color (v) in (A) thus equals
[
s(v) + (2 - s(v)) = 2.
]
So **each color appears exactly twice in pile (A)**, and hence also twice in pile (B).

---

### Step 5: Check the sums

Each complementary pair is split between the two piles. As each pair sums to (4n+1) and there are (2n) pairs, each pile sums to (n(4n+1)). Thus the total weights are equal.

---

### Conclusion

The construction produces two piles with equal total weights and exactly two pebbles of each color in each pile, as required. âˆŽ
